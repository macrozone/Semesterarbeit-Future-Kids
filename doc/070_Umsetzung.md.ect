
\pagebreak


# Umsetzung Prototyp

## Verwendete Werkzeuge

### Source-Code-Kontrolle

Als Werkzeug für die Source-Code-Kontrolle kam *Git* zur Verwendung, da das Projekt bereits 
auf *Github* gehostet wird. 

Ein neuer *Branch* *feature/schedules* protokollierte die Arbeit auf Github, dieser wurde ausgehend vom aktuellsten Entwicklungsstand erstellt. Der Fortschritt der Arbeit wurde regelmässig auf Github geladen und somit gesichert.


### IDE

Als Entwicklungsumgebung kam RubyMine 7.1.2 zur Verwendung, welche es erlaubt *Ruby on Rails*-Applikationen
direkt auszuführen und zu debuggen. RubyMine vereinfacht auch das Ausführen von *Specs* oder *Tests*.

Zusätzlich wurde *Sublime Text 3* verwendet, da dieser aktuell für das verwendete *cjsx*-Format eine bessere
Syntax-Unterstüztung bietet.


### React

React ist in *FutureKid* über das *gem*[^fn_gems] *'react-rails'* bereits integriert, welches die die *react*-Laufzeitumgebung enthält, jsx-Dateien kompiliert und in die Asset-Pipeline[^fn_assetpipeline] von Ruby on Rails integriert, sowie eine Integration der Komponenten in die Rails-View-Schicht [^fn_react_rails]. Ferner können damit React-Komponenten serverseitig gerendert werden. [^fn_ssr]. Ergänzt wurde das *gem 'sprockets-coffee-react'*, welches den CJSX-Syntax unterstützt. Zu JSX und CJSX siehe nachfolgender Abschnitt.


[^fn_gems]: Gems ("Edelsteine") sind Pakete oder Module für Ruby, welche jeweils eine bestimmte Aufgabe erfüllen. Ein gem kann andere gems als Abhängigkeiten benötigen.

[^fn_ssr]: Serverseitiges Rendering (SSR) soll es unter anderem Suchmaschinen leichter machen, Web-Anwendung zu indizieren und zu durchsuchen, zudem kann die initiale Ladezeit von Webseiten reduziert werden. Für *FutureKids* ist dies nicht von Bedeutung.


[^fn_assetpipeline]: Zusatzdatein zu HTML-Seiten, wie Scripts und Stylesheets können in Ruby on Rails vorkompliliert und optimiert werden. Diesen Ablauf erledigt die *Asset Pipeline*

[^fn_react_rails]: Siehe Quelle [@react_rails]

### JSX und CJSX

*JSX* Erweitert Javascript um eine XML-artige Syntax, in welcher React-Komponenten ähnlich wie HTML erstellt werden können:

~~~~~~~
var dropdown =
  <Dropdown>
    A dropdown list
    <Menu>
      <MenuItem>Do Something</MenuItem>
      <MenuItem>Do Something Fun!</MenuItem>
      <MenuItem>Do Something Else</MenuItem>
    </Menu>
  </Dropdown>;

render(dropdown);

~~~~~~~
[^fn_jsx_sample]

[^fn_jsx_sample]: Beispiel angelehnt an: https://facebook.github.io/jsx/

CJSX ist eine Variante von *JSX*, welcher *CoffeeScript*, statt Javascript zugrunde liegt.

*CoffeeScript* ist ein *Dialekt* von JavaScript, wobei Klammern häufig weggelassen und statdessen Blöcke mittels Einrücken codiert werden. Weiterhin bietet *CoffeeScript* eine Reihe an *Syntactic Sugar*, d.h. Syntaktische Erweiterungen, welche häufig benötigte Konstrukte vereinfachen. [^fn_coffeescript]

[^fn_coffeescript]: Nähers zu CoffeeScript auf http://coffeescript.org/

*CJXS* vereint nun CoffeeScript mit der XML-Erweiterungen von JSX:

~~~~~~~
var dropdown =
  <Dropdown>
    { <h1>A dropdown list.</h1> if @state.showTitle }
    <Menu>
    {
    	for menu in menuItems
    		<MenuItem
    			id=menu.id
    			isActive=@state.activeMenu is menu.id
    		>{menu.label}</MenuItem>
	  }  
    </Menu>
  </Dropdown>;

render(dropdown);

~~~~~~~

Da in *FutureKids* weitgehend *CoffeeScript* verwendet wird, ist deren Verwendung auch für React-Komponenten naheliegend. Als Alternative gibt es die vereinfachte JSX-CoffeeScript-Syntax, wobei die JSX-Subsyntax mittels `-Zeichen "escaped" wird. Allerdings entsteht dadurch eine Mischsyntax aus Javascript und CoffeeScript. Der Author dieser Arbeit vertritt die Meinung dass die CJSX-Syntax expressiver ist, als die Mischform und reines JSX, da Schleifen und Kontrollstrukturen sehr einfach in den XML-Strukturen verwendet werden können (Siehe obiges Beispiel).


## Erste Iteration

In einer ersten Iteration wurden die Anforderungen \ref{sc-001} - \ref{sc-015} gemäss Planung umgesetzt, dabei wurden \ref{sc-008} und \ref{sc-009} nur graphisch gelöst (wie im Abschnitt \ref{feinkonzept} beschrieben). 



![Ein neuer Menupunkt öffnet die neue Mentorensuche \label{screenshot_new_menu}](img/screenshot_new_menu.png)

![Die neue Mentorensuche weist jedem Mentor eine Farbe zu (dynamisch abhängig von der Anzahl mentoren)\label{screenshot_iteration1}](img/screenshot_iteration1.png)

![Bei einem Klick auf einen Zeitfenster kann der Mentor dem Schüler direkt zugewiesen werden. Es sind nur diejenigen Zeitfenster klickbar, welche sowohl von Schüler als auch von Mentor belegt sind\label{screenshot_iteration1_assign}](img/screenshot_iteration1_assign.png)


### Verifizierung

Die einzelnen Anforderungen wurden durch Akzeptanztests mittels *Capybara-Specs* getrieben erstellt. Abbildung \ref{img_testresults1} zeigt das Testprotokoll (aus *RubyMine*) der Akzeptanztests.  

![Ausgabe der Testsuite von *RubyMine* nach der ersten Iteration \label{img_testresults1}](img/testresults1.png)

Die Anforderungen, welche die Anwendung vor der Anpassung bereits erfüllten, wurden allerdings nicht erneut maschinell überprüft.

- \ref{sc-001} \checkmark durch die bisherige Lösung erüllt
- \ref{sc-002} \checkmark durch die bisherige Lösung erüllt
- \ref{sc-003} \checkmark durch die bisherige Lösung erüllt
- \ref{sc-004} \checkmark durch die bisherige Lösung erüllt
- \ref{sc-005} \checkmark durch die bisherige Lösung und zudem durch die neue Mentoren-Suche erfüllt, welche im Test **timetable - select one entry to store the date** getested wurde.
- \ref{sc-007} \checkmark durch die bisherige Profilseite des Schülers erfüllt
- \ref{sc-008} \checkmark grafisch über die neue Mentoren-Suche umgesetzt
- \ref{sc-009} \checkmark grafisch über die neue Mentoren-Suche umgesetzt
- \ref{sc-010} \checkmark als Filter umgesetzt, im Test **filters - sex-filter** getestet
- \ref{sc-011} \checkmark als Filter umgesetzt, im Test **filters - ects-filter** getestet
- \ref{sc-012} \checkmark als Filter umgesetzt, im Test **filters - school-filter** getestet
- \ref{sc-013} \checkmark als Filter umgesetzt, im Test **filter - number-of-kids-filter** getested
- \ref{sc-014} \checkmark in dieser Iteration noch nicht maschinell getestet
- \ref{sc-015} \checkmark im Test **timetable - select one entry to store the date** verifiziert

Die Anwendung wurde daraufhin auf die Test-Instanz (*Staging-Server*) geladen und durch den Kunden verifiziert. 

TODO: Verifizierung der NFR

## Zweite Iteration

Die erste Rückmeldung fiel sehr positiv aus. In einem weiteren Treffen wurden Anpassungen besprochen. Grösstes Problem war der Filter für die Anzahl der betreuten Kinden, gemäss \ref{sc-13}. In der Praxis ist es wichtiger zu unterscheiden, ob ein Mentor als Haupt- oder primärer Mentor ein Kind betreut oder nur Ersatzmentor ist. Zudem soll beim Zuweisen eines Mentors zu einem Kind dieser als primärer oder als Ersatzmentor zugewiesen werden, je nach dem, ob der Schüler schon ein Mentor hat oder nicht.

Zudem wurden gewisse Beschriftungen bemängelt, die angepasst wurden.

Weiterhin wurde die Anzahl an Mentoren für den Vergleich limitiert auf 10 mentoren, sodass die Balken nicht zu klein werden.

### Neue Anforderungen:

Angepasste Stories: 

<% include 'story.macro.ect',
  number: "013"
  version: "2"
  title: "Als Administrator möchte ich für einen Schüler nach Mentoren suchen können, welche als primärer Mentor oder Ersatzmentor im Einsatz sind"
  priority: "MAY"
  accCriteria: [
    "Es können Mentoren gefunden werden, welche noch kein Kind zugewiesen haben"
    "Es können Mentoren gefunden werden, welche nur als primäre Mentoren aktiv sind"
    "Es können Mentoren gefunden werden, welche nur als Ersatzmentoren aktiv sind"
    "Es können Mentoren gefunden werden, sowohl als primärer Mentor als auch als Ersatzmentor aktiv sind"
  ]
%>


<% include 'story.macro.ect',
  number: "010"
  version: "2"
  title: "Als Administrator möchte ich für einen Schüler nach Mentoren mit passendem Geschlecht suchen können."
  priority: "MAY"
  accCriteria: [
    "Neu: Die Optionen sind mit 'männlich' und 'weiblich' beschriftet"
  ]
%>

<% include 'story.macro.ect',
  number: "011"
  version: 2
  title: "Als Administrator möchte ich für einen Schüler nach Mentoren suchen können, welche mittels ECTS-Punkten vergütet werden."
  priority: "MAY"
  accCriteria: [
    "Neu: Die Optionen sind mit 'ECTS' und 'Kein ECTS' beschriftet"
  ]
%>

<% include 'story.macro.ect',
  number: "008"
  version: 2
  title: "Als Administrator möchte ich für einen Schüler nach Mentoren mit überschneidenden Zeitfenstern suchen können"
  priority: "MAY"
  accCriteria: [
    "Neu: Es werden maximal 10 Mentoren für den Vergleich angezeigt"
  ]
%>

Neue Story:

Diese Story wurde als Massnahme für die Reduktion der nötigen Klicks implizit umgesetzt, aber noch nicht als Story erfasst. Da diese Anforderung nun etwas angepasst wurde, soll sie hier eine eigene Story erhalten:

<% include 'story.macro.ect',
  number: "016"
  title: "Als Administrator möchte ich in der Mentoren-Suche ein Mentor direkt einem Kind zuweisen können"
  priority: "MAY"
  accCriteria: [
    "Die Wahl muss bestätigt werden"
    "Der Mentor wird als Hauptmentor zugewiesen, wenn das Schüler noch keinen Mentor hat"
    "Der Mentor wird als Ersatzmentor zugeweisen, wenn der Schüler bereits einen Mentor hat"
    "Es erscheint eine Meldung, wenn sowohl primärer Mentor, als auch Ersatzmentor zugewiesen sind"
  ]
%>


### Umsetzung und Verifizierung

![Die Auswahl für den Mentoren zur Anzahl der betreuten Kinder, wurde angepasst. Zudem wurde das zuvor nicht sichtbare Formular, welches der Seite zu Grunde liegt, sichtbar gemacht, da es nützliche Informationen offenbart. Zudem kann dadurch der Mentor manuell geändert werden. \label{screenshot_iteration2}](img/screenshot_iteration2.png)

![Sind schon beide Mentoren zugewiesen, erscheint nun eine Fehlermeldung\label{screenshot_iteration2_assign}](img/screenshot_iteration2_assign.png)


Anwendung und Tests wurden angepasst und erweitert, das resultierende Testprotokol aus *RubyMine* ist in Abbildung \ref{img_testresults2} ersichtlich.

- \ref{sc-013v2} \checkmark im Test **filter - mentors-display-filter** verifiziert
- \ref{sc-010v2}, \ref{sc-011v2} Die Anpassung der Beschriftungen wurden nicht maschinell überprüft
- \ref{sc-008v2} \checkmark in den angepassten Tests **timetable - shows maximum 10 mentors** verifiziert
- \ref{sc-016} \checkmark in den angepassten Tests **timetable - selection of mentors** verifiziert



![Ausgabe der Testsuite von *RubyMine* nach der zweiten Iteration \label{img_testresults2}](img/testresults2.png)

TODO: Verifizierung der NFR









